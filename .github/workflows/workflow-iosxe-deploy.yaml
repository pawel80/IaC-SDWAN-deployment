name: IOSXE_deploy

on:
  push:
  # workflow will run if below branches will be updated
    branches:
      - 'main'
      - 'dev'

env:
  TF_IOSXE_DIR: 'tf_iosxe'

jobs:
  terraform:
    name: 'Terraform'
    # refs/pull/<pr_number>/merge
    # refs/tags/<tag_name>
    # if: github.ref == 'refs/heads/dev' || github.event.inputs.terraform_env_remove == 'true'
    if: github.ref == 'refs/heads/dev'
    # runs-on: ubuntu-latest
    runs-on: self-hosted
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4

      # Terraform API driven workflow
      - name: 'Terraform initial setup'
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TEAM_TOKEN }}
          terraform_version: 1.11.3

      # Format terraform configuration files into a canonical format and style
      - name: 'Terraform Format'
        working-directory: ${{ env.TF_IOSXE_DIR }}
        id: fmt
        run: terraform fmt
 
      # Initializes a working directory containing Terraform configuration files
      - name: 'Terraform Init'
        working-directory: ${{ env.TF_IOSXE_DIR }}
        id: init
        run: terraform init
       
      # Validates the configuration files in a directory, referring only to the configuration and not accessing any remote services such as remote state, etc.
      - name: 'Terraform Validate'
        working-directory: ${{ env.TF_IOSXE_DIR }}
        id: validate
        # -no-color -> Disables terminal formatting sequences in the output
        run: terraform validate -no-color

      # Creates an execution plan, which lets you preview the changes that Terraform plans to make to your infrastructure
      - name: 'Terraform Plan'
        if: github.ref == 'refs/heads/dev'
        working-directory: ${{ env.TF_IOSXE_DIR }}
        id: plan
        run: terraform plan -no-color
        continue-on-error: true
        env:
          IOSXE_USERNAME: ${{ secrets.LEGACY_USERNAME }}
          IOSXE_PASSWORD: ${{ secrets.LEGACY_PASSWORD }}
          IOSXE_URL: 'https://172.16.10.34'

      # Executes the actions proposed in a Terraform plan
      - name: 'Terraform Apply'
        if: github.ref == 'refs/heads/dev'
        working-directory: ${{ env.TF_IOSXE_DIR }}
        # -auto-approve -> instruct Terraform to apply the plan without asking for confirmation
        # -input=false -> Disables Terraform's default behavior of prompting for input
        run: terraform apply -auto-approve -input=false
        # env:
        #   IOSXE_USERNAME: ${{ secrets.LEGACY_USERNAME }}
        #   IOSXE_PASSWORD: ${{ secrets.LEGACY_PASSWORD }}
        #   IOSXE_URL: 'https://172.16.10.34'